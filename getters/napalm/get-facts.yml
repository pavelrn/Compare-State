#
# Get device state using NAPALM
#

- napalm_get_facts:
    hostname={{ansible_host|default(inventory_hostname)}}
    username={{ansible_user}}
    password={{ansible_ssh_pass}}
    dev_os={{ansible_os}}
    filter='interfaces,interfaces_ip,ipsec,routes,bgp_neighbors,ospf_neighbors'
  when: fortios_vdom is undefined
  register: result

- napalm_get_facts:
    hostname={{ansible_host|default(inventory_hostname)}}
    username={{ansible_user}}
    password={{ansible_ssh_pass}}
    dev_os={{ansible_os}}
    filter='interfaces,interfaces_ip,ipsec,routes,bgp_neighbors,ospf_neighbors'
    optional_args="fortios_vdom={{ fortios_vdom }}"
  when: fortios_vdom is defined
  register: result

- set_fact:
    state_interfaces: "{{napalm_interfaces|combine(napalm_interfaces_ip,recursive=True)}}"
    state_ipsec: "{{napalm_ipsec}}"
    state_routes: "{{napalm_routes}}"
    state_ospf_peers: "{{napalm_ospf_neighbors}}"
    state_bgp_peers: "{{napalm_bgp_neighbors}}"


- name: print data
  debug: var=result
